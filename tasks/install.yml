---

- name: KAFKA | Installing dependencies
  apt:
    pkg: "{{ item }}"
    state: present
  with_items: "{{ required_libs }}"
  tags:
    skip_ansible_lint

- name: KAFKA | Ensure kafka group
  group:
    name: "{{ kafka_group }}"

- name: KAFKA | Ensure kafka user
  user:
    name: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    home: /bin/false

- name: KAFKA | Create install path
  file:
    path: "{{ kafka_install_path }}"
    state: directory
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    recurse: yes

- name: KAFKA | Check kafka version
  command: bash -c "ls {{ kafka_install_path }}/kafka/libs | grep 'kafka_{{ scala_version }}-{{ kafka_version }}.jar'"
  register: kafka_check
  changed_when: false
  ignore_errors: true

- name: KAFKA | Download kafka
  get_url:
    url: "{{ kafka_sources_url }}"
    dest: /tmp
  when: 'kafka_force_reinstall or kafka_check|failed or kafka_check.stdout == ""'

- name: KAFKA | Untar kafka
  unarchive:
    copy: no
    src: "/tmp/{{ kafka_package }}"
    dest: "{{ kafka_install_path }}"
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
  when: 'kafka_force_reinstall or kafka_check|failed or kafka_check.stdout == ""'

- name: KAFKA | Link folder
  file:
    src: "{{ kafka_install_path }}/{{ kafka_package_name }}"
    dest: "{{ kafka_install_path }}/kafka"
    state: link
    owner: "{{ kafka_user }}"
    group: "{{ kafka_group }}"
    force: True
  when: 'kafka_force_reinstall or kafka_check|failed or kafka_check.stdout == ""'

- name: KAFKA | Copy Daemon script
  template:
    src: kafka.service.j2
    dest: /lib/systemd/system/kafka.service
    mode: 0644
  notify: restart kafka
